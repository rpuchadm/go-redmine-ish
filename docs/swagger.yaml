definitions:
  handlers.GetCategoryHandlerData:
    properties:
      category:
        $ref: '#/definitions/models.Category'
      issues:
        items:
          $ref: '#/definitions/models.Issue'
        type: array
      project:
        $ref: '#/definitions/models.Project'
      trackers:
        items:
          $ref: '#/definitions/models.Tracker'
        type: array
      users:
        items:
          $ref: '#/definitions/models.User'
        type: array
    type: object
  handlers.GetIssueHandlerData:
    properties:
      categories:
        items:
          $ref: '#/definitions/models.Category'
        type: array
      comments:
        items:
          $ref: '#/definitions/models.Comment'
        type: array
      issue:
        $ref: '#/definitions/models.Issue'
      project:
        $ref: '#/definitions/models.Project'
      tracker:
        $ref: '#/definitions/models.Tracker'
      users:
        items:
          $ref: '#/definitions/models.User'
        type: array
    type: object
  handlers.GetProjectHandlerData:
    properties:
      categories:
        items:
          $ref: '#/definitions/models.Category'
        type: array
      categorynumberofissues:
        items:
          $ref: '#/definitions/models.CategoryNumberOfIssues'
        type: array
      members:
        items:
          $ref: '#/definitions/models.Member'
        type: array
      project:
        $ref: '#/definitions/models.Project'
      roles:
        items:
          $ref: '#/definitions/models.Role'
        type: array
      users:
        items:
          $ref: '#/definitions/models.User'
        type: array
    type: object
  handlers.GetProjectsHandlerData:
    properties:
      count:
        type: integer
      projects:
        items:
          $ref: '#/definitions/models.Project'
        type: array
    type: object
  handlers.GetRolesHandlerData:
    properties:
      count:
        type: integer
      roles:
        items:
          $ref: '#/definitions/models.Role'
        type: array
    type: object
  handlers.GetSettingsHandlerData:
    properties:
      trackers:
        items:
          $ref: '#/definitions/models.Tracker'
        type: array
    type: object
  handlers.GetTrackersHandlerData:
    properties:
      count:
        type: integer
      trackers:
        items:
          $ref: '#/definitions/models.Tracker'
        type: array
    type: object
  handlers.GetUserHandlerData:
    properties:
      categories:
        items:
          $ref: '#/definitions/models.Category'
        type: array
      issues:
        items:
          $ref: '#/definitions/models.Issue'
        type: array
      projects:
        items:
          $ref: '#/definitions/models.Project'
        type: array
      roles:
        items:
          $ref: '#/definitions/models.Role'
        type: array
      trackers:
        items:
          $ref: '#/definitions/models.Tracker'
        type: array
      user:
        $ref: '#/definitions/models.User'
    type: object
  handlers.GetUsersHandlerData:
    properties:
      count:
        type: integer
      projects:
        items:
          $ref: '#/definitions/models.Project'
        type: array
      roles:
        items:
          $ref: '#/definitions/models.Role'
        type: array
      trackers:
        items:
          $ref: '#/definitions/models.Tracker'
        type: array
      users:
        items:
          $ref: '#/definitions/models.User'
        type: array
      users_roles:
        items:
          $ref: '#/definitions/models.UserRole'
        type: array
    type: object
  models.Category:
    properties:
      assigned_to_id:
        type: integer
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      project_id:
        type: integer
      updated_at:
        type: string
    type: object
  models.CategoryNumberOfIssues:
    properties:
      category_id:
        type: integer
      number_of_issues:
        type: integer
    type: object
  models.Comment:
    properties:
      content:
        type: string
      created_at:
        type: string
      id:
        type: integer
      issue_id:
        type: integer
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  models.Issue:
    properties:
      assigned_to_id:
        type: integer
      category_id:
        type: integer
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      project_id:
        type: integer
      status:
        type: string
      subject:
        type: string
      tracker_id:
        type: integer
      updated_at:
        type: string
    type: object
  models.Member:
    properties:
      created_at:
        type: string
      id:
        type: integer
      project_id:
        type: integer
      role_id:
        type: integer
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  models.Project:
    properties:
      created_on:
        type: string
      description:
        type: string
      id:
        type: integer
      identifier:
        type: string
      name:
        type: string
      parent_id:
        description: Usamos *int para manejar valores NULL
        type: integer
      updated_on:
        type: string
    type: object
  models.Role:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  models.Tracker:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      password_hash:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
  models.UserRole:
    properties:
      role_id:
        type: integer
      user_id:
        type: integer
    type: object
info:
  contact: {}
  description: API para gestionar proyectos, usuarios, roles, categor√≠as y problemas
    al estilo de Redmine.
  title: Go Redmine-ish API
  version: "1.0"
paths:
  /auth:
    get:
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
  /category:
    post:
      parameters:
      - description: Category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.Category'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
  /category/{id}:
    delete:
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
    get:
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.GetCategoryHandlerData'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
    put:
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      - description: Category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.Category'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
  /healthz:
    get:
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
  /init:
    get:
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
  /issue:
    post:
      parameters:
      - description: Issue
        in: body
        name: issue
        required: true
        schema:
          $ref: '#/definitions/models.Issue'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Issue'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
  /issue/{id}:
    delete:
      parameters:
      - description: Issue ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
    get:
      parameters:
      - description: Issue ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.GetIssueHandlerData'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
    put:
      parameters:
      - description: Issue ID
        in: path
        name: id
        required: true
        type: integer
      - description: Issue
        in: body
        name: issue
        required: true
        schema:
          $ref: '#/definitions/models.Issue'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Issue'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
  /project:
    post:
      parameters:
      - description: Project
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/models.Project'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Project'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
  /project/{id}:
    get:
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.GetProjectHandlerData'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
    put:
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: integer
      - description: Project
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/models.Project'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Project'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
  /projects:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.GetProjectsHandlerData'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
  /role:
    post:
      parameters:
      - description: Role
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/models.Role'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Role'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
  /role/{id}:
    delete:
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
    get:
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Role'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
  /roles:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.GetRolesHandlerData'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
  /settings:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.GetSettingsHandlerData'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
  /trackers:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.GetTrackersHandlerData'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
  /user:
    post:
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
  /user/{id}:
    get:
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.GetUserHandlerData'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
    put:
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
  /users:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.GetUsersHandlerData'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
securityDefinitions:
  BearerAuth:
    description: 'Ingresa el token en formato: "Bearer {token}"'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
